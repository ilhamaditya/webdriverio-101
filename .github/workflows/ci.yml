name: WebdriverIO CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        attempt: [1, 2, 3]  # Retry job up to 3 times

    services:
      docker:
        image: selenium/standalone-chrome:latest
        options: --privileged --add-host=host.docker.internal:host-gateway
        ports:
          - 4444:4444
          - 8080:8080
          - 5050:5050
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Set Up Environment Variables
        run: |
          echo "WEB_URL=$WEB_URL" >> $GITHUB_ENV
          echo "WEB_USERNAME=$WEB_USERNAME" >> $GITHUB_ENV
          echo "WEB_PASSWORD=$WEB_PASSWORD" >> $GITHUB_ENV
          echo "SLACK_WEBHOOK=$SLACK_WEBHOOK" >> $GITHUB_ENV

      - name: Prepare Allure Results Directory
        run: mkdir -p allure-results && touch allure-results/executor.json

      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Stop and Remove Existing Containers
        run: |
          for port in 4444 5050; do
            container_id=$(docker ps -q --filter "expose=$port")
            if [ ! -z "$container_id" ]; then
              echo "Stopping container using port $port..."
              docker stop $container_id && docker rm $container_id
            fi
          done
          docker-compose down --volumes --remove-orphans

      - name: Start Docker Compose
        run: |
          attempts=3
          until docker-compose -f docker-compose.yml up -d || [ $attempts -eq 0 ]; do
            echo "Retrying to start Docker Compose..."
            sleep 10
            ((attempts--))
          done
          if [ $attempts -eq 0 ]; then
            echo "Docker Compose failed to start after 3 attempts!"
            exit 1
          fi

      - name: Wait for All Services
        run: |
          services=("http://localhost:4444/status" "http://localhost:8080" "http://localhost:5050")
          for service in "${services[@]}"; do
            attempts=60
            until curl -sSf $service > /dev/null || [ $attempts -eq 0 ]; do
              echo "Waiting for $service to be up..."
              sleep 5
              ((attempts--))
            done
            if [ $attempts -eq 0 ]; then
              echo "Service $service failed to start!"
              exit 1
            fi
          done

      - name: Run Tests
        env:
          WEB_URL: ${{ secrets.WEB_URL }}
          WEB_USERNAME: ${{ secrets.WEB_USERNAME }}
          WEB_PASSWORD: ${{ secrets.WEB_PASSWORD }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          attempts=3
          until npm run dock || [ $attempts -eq 0 ]; do
            echo "Retrying WebdriverIO tests..."
            sleep 10
            ((attempts--))
          done
          if [ $attempts -eq 0 ]; then
            echo "WebdriverIO tests failed after 3 attempts!"
            exit 1
          fi

      - name: Debug Environment Variables
        run: echo "WEB_URL is set to \${{ secrets.WEB_URL }}"  # Avoid printing actual secrets!

      - name: Notify Slack
        if: always()
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"Test workflow completed. Check Allure results for details!"}' \
          $SLACK_WEBHOOK

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ steps.date.outputs.timestamp }}
          path: allure-results/

      - name: Clean Up Docker Containers
        if: always()
        run: docker-compose down --volumes --remove-orphans
