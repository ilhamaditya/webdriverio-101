name: WebdriverIO CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # This allows manual trigger

jobs:
  test:
    runs-on: ubuntu-22.04  # Use a specific Ubuntu version
    strategy:
      fail-fast: false
      matrix:
        attempt: [1, 2, 3] # Retry job up to 3 times

    services:
      docker:
        image: docker:latest
        options: --privileged
        ports:
          - 4444:4444
          - 8080:8080
          - 5050:5050

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Prepare Allure Results Directory
      - name: Prepare Allure Results Directory
        run: mkdir -p allure-results && touch allure-results/executor.json

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify Docker Compose installation

      # Stop and remove any existing containers that are using the same ports
      - name: Stop and Remove Existing Containers
        run: |
          docker ps -q --filter "name=selenium" | xargs -I {} docker stop {}
          docker ps -aq --filter "name=selenium" | xargs -I {} docker rm {}
          docker ps -q --filter "name=allure" | xargs -I {} docker stop {}
          docker ps -aq --filter "name=allure" | xargs -I {} docker rm {}

      # Start Docker Compose
      - name: Start Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d

      # Wait for All Services to be up
      - name: Wait for All Services
        run: |
          for service in http://localhost:4444/status http://localhost:8080 http://localhost:5050; do
            until curl -sSf $service > /dev/null; do sleep 5; done
          done

      - name: Check Docker Compose status
        run: |
          docker-compose ps

      # Run WebdriverIO Tests
      - name: Run Tests
        env:
          WEB_URL: ${{ secrets.WEB_URL }}
          WEB_USERNAME: ${{ secrets.WEB_USERNAME }}
          WEB_PASSWORD: ${{ secrets.WEB_PASSWORD }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: npm run dock

      # Notify Slack
      - name: Notify Slack
        if: always()
        run: echo "Slack notification sent!"

      # Upload Allure Results
      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4  # Update to v4
        with:
          name: allure-results
          path: allure-results/

      # Clean up Docker Containers after Tests
      - name: Clean Up Docker Containers
        if: failure()
        run: |
          docker-compose down
